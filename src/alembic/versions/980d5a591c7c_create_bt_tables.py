"""Create bt-tables

Revision ID: 980d5a591c7c
Revises: 7579d89290ea
Create Date: 2024-01-02 16:53:38.178630

"""
from typing import Sequence, Union

import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

from alembic import op

# revision identifiers, used by Alembic.
revision: str = '980d5a591c7c'
down_revision: Union[str, None] = '7579d89290ea'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    op.execute('CREATE SCHEMA IF NOT EXISTS bt;')
    op.execute(sa.schema.CreateSequence(sa.Sequence('person_id_seq', schema='bt')))
    op.execute(sa.schema.CreateSequence(sa.Sequence('abstimmung_redner_id_seq', schema='bt')))
    op.execute(sa.schema.CreateSequence(sa.Sequence('rede_id_seq', schema='bt')))
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'abstimmung',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('title', sa.String(), nullable=False),
        sa.Column('abstimmung_date', sa.Date(), nullable=False),
        sa.Column('ja', sa.Integer(), nullable=False),
        sa.Column('nein', sa.Integer(), nullable=False),
        sa.Column('enthalten', sa.Integer(), nullable=False),
        sa.Column('nicht_abgegeben', sa.Integer(), nullable=False),
        sa.Column('dachzeile', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        schema='bt',
    )
    op.create_table(
        'person',
        sa.Column(
            'id',
            sa.Integer(),
            sa.Sequence('person_id_seq', schema='bt'),
            unique=True,
            nullable=False,
        ),
        sa.Column('biography_url', sa.String(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('surname', sa.String(), nullable=False),
        sa.Column('title', sa.String(), nullable=True),
        sa.Column('fraktion', sa.String(), nullable=False),
        sa.Column('bundesland', sa.String(), nullable=False),
        sa.Column('image_url', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('biography_url'),
        schema='bt',
    )
    op.create_table(
        'abstimmung_drucksache',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('drucksache_url', sa.String(), nullable=False),
        sa.Column('drucksache_name', sa.String(), nullable=False),
        sa.Column('abstimmung_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(
            ['abstimmung_id'],
            ['bt.abstimmung.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        schema='bt',
    )
    op.create_table(
        'abstimmung_redner',
        sa.Column(
            'id',
            sa.Integer(),
            sa.Sequence('abstimmung_redner_id_seq', schema='bt'),
            nullable=False,
            unique=True,
        ),
        sa.Column('abstimmung_id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('surname', sa.String(), nullable=False),
        sa.Column('function', sa.String(), nullable=False),
        sa.Column('title', sa.String(), nullable=True),
        sa.Column('image_url', sa.String(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(
            ['abstimmung_id'],
            ['bt.abstimmung.id'],
        ),
        sa.PrimaryKeyConstraint('abstimmung_id', 'name', 'surname', 'function'),
        schema='bt',
    )

    op.create_table(
        'rede',
        sa.Column(
            'id', sa.Integer(), sa.Sequence('rede_id_seq', schema='bt'), nullable=False, unique=True
        ),
        sa.Column('abstimmung_redner_id', sa.Integer(), nullable=False),
        sa.Column('bt_video_id', sa.String(), nullable=False),
        sa.Column('video_url', sa.String(), nullable=False),
        sa.Column('text', sa.String(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(
            ['abstimmung_redner_id'],
            ['bt.abstimmung_redner.id'],
        ),
        sa.PrimaryKeyConstraint('bt_video_id'),
        schema='bt',
    )
    op.create_table(
        'einzelperson_abstimmung',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('abstimmung_id', sa.Integer(), nullable=False),
        sa.Column('person_id', sa.Integer(), nullable=False),
        sa.Column(
            'vote',
            sa.Enum('JA', 'NEIN', 'ENTHALTEN', 'NICHTABGEGEBEN', name='vote'),
            nullable=False,
        ),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(
            ['abstimmung_id'],
            ['bt.abstimmung.id'],
        ),
        sa.ForeignKeyConstraint(
            ['person_id'],
            ['bt.person.id'],
        ),
        sa.PrimaryKeyConstraint('id'),
        schema='bt',
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('einzelperson_abstimmung', schema='bt')
    op.drop_table('rede', schema='bt')
    op.drop_table('abstimmung_redner', schema='bt')
    op.drop_table('abstimmung_drucksache', schema='bt')
    op.drop_table('person', schema='bt')
    op.drop_table('abstimmung', schema='bt')
    # ### end Alembic commands ###
    sa.Enum(name='vote').drop(op.get_bind(), checkfirst=False)

    op.execute(sa.schema.DropSequence(sa.Sequence('rede_id_seq', schema='bt')))
    op.execute(sa.schema.DropSequence(sa.Sequence('abstimmung_redner_id_seq', schema='bt')))
    op.execute(sa.schema.DropSequence(sa.Sequence('person_id_seq', schema='bt')))
    op.execute('DROP SCHEMA IF EXISTS bt;')
